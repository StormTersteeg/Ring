@{
    ViewData["Title"] = "Home Page";
}
@model string

@{
    if (Model == null)
    {
        <div class="d-flex justify-content-center text-center mt-5">
            <form id="login-form" class="col-12 col-lg-6" method="post">
                <h1>Login</h1>
                <hr />

                <div class="input-group mb-3">
                    <input name="username" id="username-input" type="text" class="form-control" placeholder="username..." aria-describedby="username-submit">
                    <div class="input-group-append pointer">
                        <span class="input-group-text" id="username-submit" onclick="IsNameTaken()">Choose</span>
                    </div>
                </div>
            </form>
        </div>
    }
    else
    {
        <audio id="audio_ping"><source src="audio/ping.mp3" type="audio/mpeg">Your browser does not support the audio element.</audio>
        <audio id="audio_on"><source src="audio/audio_on.mp3" type="audio/mpeg">Your browser does not support the audio element.</audio>
        <audio id="audio_message"><source src="audio/message.mp3" type="audio/mpeg">Your browser does not support the audio element.</audio>

        <div class="text-center mt-5">
            <h1>
                <span>@Model</span>
                <span class="badge badge-light" onclick="this.innerHTML = '🔉'; audio_on.play()">🔇</span>
                <span class="badge badge-light" onclick="Logout()">❌</span>
            </h1>

            <hr />

            <div id="users">
                @foreach (string user in C.GetUsers())
                {
                    if (!Model.Equals(user)) {
                <h2>
                    <span>@user</span>
                    <span class="badge badge-info" onclick="Message(this, '@user')">message</span>
                    <span class="badge badge-info" onclick="Ring(this, '@user')">ring</span>
                </h2>
                        }
            }
            </div>
        </div>
    }
}

<script>const username = "@Model"</script>